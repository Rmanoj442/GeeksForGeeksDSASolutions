bool IsFoldableUtil(Node* n1, Node* n2); 
  
/* Returns true if the given tree can be folded */
bool IsFoldable(Node* root) 
{ 
    if (root == NULL) { 
        return true; 
    } 
  
    return IsFoldableUtil(root->left, root->right); 
} 
  
/* A utility function that checks  
if trees with roots as n1 and n2  
are mirror of each other */
bool IsFoldableUtil(Node* n1, Node* n2) 
{ 
    /* If both left and right subtrees are NULL,  
    then return true */
    if (n1 == NULL && n2 == NULL) { 
        return true; 
    } 
  
    /* If one of the trees is NULL and other is not,  
    then return false */
    if (n1 == NULL || n2 == NULL) { 
        return false; 
    } 
  
    /* Otherwise check if left and right subtrees are mirrors of  
    their counterparts */
    return IsFoldableUtil(n1->left, n2->right) && IsFoldableUtil(n1->right, n2->left); 
} 
