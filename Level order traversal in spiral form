void printSpiral(Node *root)
{
    //Your code here
    if (root == NULL) 
        return; 
  
    stack<int> s;  
    queue<Node*> q; 
  
    bool reverse = true; 
    q.push(root); 
    while (!q.empty()) { 
  
        int size = q.size(); 
        while (size) { 
            Node* p = q.front(); 
            q.pop(); 
  
            // if reverse is true, push node's  
            // data onto the stack, else print it 
            if (reverse) 
                s.push(p->data); 
            else
                cout << p->data << " "; 
  
            if (p->left) 
                q.push(p->left); 
            if (p->right) 
                q.push(p->right); 
            size--; 
        } 
  
        // print nodes from the stack if  
        // reverse is true 
        if (reverse) { 
            while (!s.empty()) { 
                cout << s.top() << " "; 
                s.pop(); 
            } 
        } 
  
        // the next row has to be printed as  
        // it is, hence change the value of  
        // reverse 
        reverse = !reverse; 
    } 
}
